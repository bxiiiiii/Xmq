
syntax = "proto3";

package proto;

option go_package = "Xmq/proto";

service Server {
  rpc Connect(ConnectArgs) returns (ConnectReply) {}
  rpc ProcessSub(SubscribeArgs) returns (SubscribeReply) {}
  rpc ProcessUnSub(UnSubscribeArgs) returns (UnSubscribeReply) {}
  rpc ProcessPull(PullArgs) returns (PullReply) {}
  rpc ProcessPub(PublishArgs) returns (PublishReply) {}
  rpc MsgAck(MsgAckArgs) returns (MsgAckReply) {}

  rpc LookUp(LookUpArgs) returns (LookUpReply) {}
  rpc RequestAlloc(RequestAllocArgs) returns (RequestAllocReply) {}
  rpc GetTopicInfo(GetTopicInfoArgs) returns (GetTopicInfoReply) {}
}

service Client {
  rpc ProcessMsg(MsgArgs) returns (MsgReply) {}
  rpc Ack2puber(Ack2puberArgs) returns (Ack2puberReply) {}
}

message LookUpArgs {
  string name = 1;
  string topic = 2;
  int32 partition = 3;
  int32 redo = 4;
}

message LookUpReply {
  string url = 1;
}

message RequestAllocArgs {}

message RequestAllocReply {
  string url = 1;
}

message ConnectArgs {
  string name = 1;
  string url = 2;
  int32 redo = 3;
  string topic = 4;
  int32 partition = 5;
  int32 type = 6;
  int32 timeout = 7;
}

message ConnectReply {
  string name = 1;
}

message SubscribeArgs {
  enum SubMode {
    Exclusive = 0;
    Shared = 1;
    Failover = 2;
    Key_Shared = 3;
  }
  string name = 1;
  string topic = 2;
  int32 partition = 3;
  string subscription = 4;
  SubMode mode = 5;
  int32 key = 6;
  uint64 subOffset = 7;
  int32 redo = 8;
}

message SubscribeReply {
  string error = 1;
}

message PullArgs {
  string name = 1;
  string topic = 2;
  int32 partition = 3;
  string subscription = 4;
  int32 bufSize = 5;
  int32 timeout = 6;
  int32 redo = 7;
}

message PullReply {
  string error = 1;
}

message UnSubscribeArgs {
  string name = 1;
  string topic = 2;
  int32 partition = 3;
  string subscription = 4;
  int32 redo = 5;
}

message UnSubscribeReply {}

message PublishArgs {
  string name = 1;
  string topic = 2;
  int32 partition = 3;
  int64 mid = 4;
  int64 msid = 5;
  string payload = 6;
  int32 redo = 7;
}

message PublishReply {}

message MsgArgs {
  string name = 1;
  string topic = 2;
  int32 partition = 3;
  int64 mid = 4;
  int64 msid = 5;
  string payload = 6;
  int32 redo = 7;
}

message MsgReply {}

message MsgAckArgs {
  string name = 1;
  string topic = 2;
  int32 partition = 3;
  string subscription = 4;
  uint64 ackOffset = 5;
}

message MsgAckReply {}

message Ack2puberArgs {}

message Ack2puberReply {}

message GetTopicInfoArgs {
  string name = 1;
  string topic = 2;
  int32 redo = 3;
}

message GetTopicInfoReply {
  string name = 1;
  int32 partitionNum = 2;
}